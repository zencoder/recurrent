#!/usr/bin/env ruby
require 'rubygems'
require 'trollop'

opts = Trollop::options do
  opt :file, "File containing task definitions and configuration", :type => :string
  opt :every, "Frequency to perform a task", :type => :string
  opt :ruby, "Ruby code to execute", :type => :string
  opt :system, "Command to send to the command line", :type => :string
  opt :name, "Name of the task", :default => 'command_line'
  opt :maximum_concurrent_tasks, "Maximum number of concurrent tasks to run", :type => :integer
  opt :pool_size, "Size of database connection pool", :type => :integer
  opt :locker_pool_size, "Size of locker database connection pool (should be >= maximum_concurrent_tasks)", :type => :integer
  opt :process_name, "Name of the worker process", :type => :string
end

begin
  require 'config/environment'
rescue LoadError
  require 'recurrent'
end
$0 = opts[:process_name] || "recurrent:worker:started-#{Time.now.to_s(:logging)}"
Recurrent::Worker.new(opts).start
